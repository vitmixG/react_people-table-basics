{"version":3,"sources":["components/Loader/Loader.tsx","api.ts","components/PeopleTable.tsx","App.tsx","index.tsx"],"names":["Loader","className","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PeopleTable","useState","people","setPeople","isLoading","setIsLoading","errorLoad","setErrorLoad","useParams","slug","useEffect","res","catch","finally","isSelected","person","findMother","find","mother","motherName","name","findFather","father","fatherName","length","map","classNames","to","style","color","sex","born","died","App","role","isActive","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.64a0b842.chunk.js","sourcesContent":["import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Loader } from './Loader';\nimport { Person } from '../types';\nimport { getPeople } from '../api';\n\nexport const PeopleTable = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [errorLoad, setErrorLoad] = useState(false);\n\n  const { slug = '' } = useParams();\n\n  useEffect(() => {\n    setIsLoading(true);\n    getPeople()\n      .then((res) => {\n        setPeople(res);\n      })\n      .catch(() => setErrorLoad(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  const isSelected = (person: Person) => person.slug === slug;\n\n  const findMother = (person: Person) => people\n    .find(mother => person.motherName === mother.name);\n  const findFather = (person: Person) => people\n    .find(father => father.name === person.fatherName);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n\n          {errorLoad && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {people && !isLoading && people.length === 0 && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n          <table\n            data-cy=\"peopleTable\"\n            className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n          >\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Sex</th>\n                <th>Born</th>\n                <th>Died</th>\n                <th>Mother</th>\n                <th>Father</th>\n              </tr>\n            </thead>\n\n            <tbody>\n              {people.map(person => (\n\n                <tr\n                  data-cy=\"person\"\n                  className={classNames({\n                    'has-background-warning': isSelected(person),\n                  })}\n                  key={person.slug}\n                >\n                  <td>\n                    <Link\n                      to={`/people/${person.slug}`}\n                      style={{ color: person.sex === 'f' ? 'red' : 'blue' }}\n                    >\n                      {person.name}\n                    </Link>\n                  </td>\n\n                  <td>{person.sex}</td>\n                  <td>{person.born}</td>\n                  <td>{person.died}</td>\n                  <td>\n\n                    {findMother(person)\n                      ? (\n                        <Link to={`/people/${findMother(person)?.slug}`} style={{ color: 'red' }}>\n                          {person.motherName }\n                        </Link>\n                      )\n                      : person.motherName || '-'}\n                  </td>\n                  <td>\n                    { findFather(person)\n                      ? (\n                        <Link to={`/people/${findFather(person)?.slug}`}>\n                          { person.fatherName}\n                        </Link>\n                      )\n                      : person.fatherName || '-'}\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </>\n  );\n};\n","import {\n  NavLink,\n  Routes,\n  Route,\n  Navigate,\n} from 'react-router-dom';\nimport classNames from 'classnames';\nimport { PeopleTable } from './components/PeopleTable';\nimport './App.scss';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            className={({ isActive }) => classNames(\n              'navbar-item',\n              { 'has-background-grey-lighter': isActive },\n            )}\n            to=\"/\"\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            className={({ isActive }) => classNames(\n              'navbar-item',\n              { 'has-background-grey-lighter': isActive },\n            )}\n            to=\"/people\"\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route\n            path=\"/\"\n            element={<h1 className=\"title\">Home Page</h1>}\n          />\n\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n\n          <Route path=\"people\">\n            <Route\n              index\n              element={<PeopleTable />}\n            />\n\n            <Route\n              path=\":slug\"\n              element={<PeopleTable />}\n            />\n          </Route>\n\n          <Route\n            path=\"*\"\n            element={<h1 className=\"title\">Page not found</h1>}\n          />\n        </Routes>\n\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}